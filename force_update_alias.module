<?php

/**
 * Implements hook_action_info().
 */
function force_update_alias_action_info() {
  $info['force_update_alias_node_update_action'] = array(
    'type' => 'node',
    'label' => t('Force update and generate URL alias'),
    'configurable' => FALSE,
    'triggers' => array(),
  );

  return $info;
}

/**
 * Implements hook_node_operations().
 */
function force_update_alias_node_operations() {
  $operations['force_update_alias_update_alias'] = array(
    'label' => t('Force update and generate URL alias'),
    'callback' => 'force_update_alias_node_update_alias_multiple',
    'callback arguments' => array('bulkupdate', array('message' => TRUE)),
  );
  return $operations;
}

/**
 * Update action wrapper for pathauto_node_update_alias().
 */
function force_update_alias_node_update_action($node, $context = array()) {
  force_update_alias_node_update_alias($node, 'bulkupdate', array('message' => TRUE));
}

/**
 * Update the URL aliases for an individual node.
 *
 * @param $node
 *   A node object.
 * @param $op
 *   Operation being performed on the node ('insert', 'update' or 'bulkupdate').
 * @param $options
 *   An optional array of additional options.
 */
function force_update_alias_node_update_alias(stdClass $node, $op, array $options = array()) {

  $options += array('language' => pathauto_entity_language('node', $node));

  module_load_include('inc', 'pathauto');
  $uri = entity_uri('node', $node);
  return pathauto_create_alias('node', $op, $uri['path'], array('node' => $node), $node->type, $options['language']);
}

/**
 * Update the URL aliases for multiple nodes.
 *
 * @param $nids
 *   An array of node IDs.
 * @param $op
 *   Operation being performed on the nodes ('insert', 'update' or
 *   'bulkupdate').
 * @param $options
 *   An optional array of additional options.
 */
function force_update_alias_node_update_alias_multiple(array $nids, $op, array $options = array()) {
  $options += array('message' => FALSE);

  $nodes = node_load_multiple($nids);
  foreach ($nodes as $node) {
    force_update_alias_node_update_alias($node, $op, $options);
  }

  if (!empty($options['message'])) {
    drupal_set_message(format_plural(count($nids), 'Updated URL alias for 1 node.', 'Updated URL aliases for @count nodes.'));
  }
}